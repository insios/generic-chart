{{/*
Container in list
https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Container
*/}}
{{- define "generic.resources.inc.container" -}}

{{- $containerName := .generic.containerName -}}
{{- $container := .generic.container -}}
{{- include "generic.useTemplates" (dict "helm" .helm "resource" $container) -}}

- name: {{ $containerName }}
  image: "{{ $container.image.repository }}:{{ default (default "latest" (.helm.Values.app).version) $container.image.tag }}"
  imagePullPolicy: {{ default "IfNotPresent" $container.image.pullPolicy }}

  {{- if $container.env }}
  env:
    {{- range $env := $container.env -}}
      {{/*- $env := deepCopy $env */}}
      {{- if kindIs "map" (($env.valueFrom).configMapKeyRef).name }}
        {{- $_ := set $env.valueFrom.configMapKeyRef "name" (include "generic.fullResourceName" (dict
          "helm" $.helm
          "generic" (dict
            "componentName" (default $.generic.componentName $env.valueFrom.configMapKeyRef.name.componentName)
            "resourceName"  (default $.generic.resourceName $env.valueFrom.configMapKeyRef.name.resourceName)
          )
        )) }}
      {{- end }}
      {{- if kindIs "map" (($env.valueFrom).secretKeyRef).name }}
        {{- $_ := set $env.valueFrom.secretKeyRef "name" (include "generic.fullResourceName" (dict
          "helm" $.helm
          "generic" (dict
            "componentName" (default $.generic.componentName $env.valueFrom.secretKeyRef.name.componentName)
            "resourceName"  (default $.generic.resourceName $env.valueFrom.secretKeyRef.name.resourceName)
          )
        )) }}
      {{- end }}
      {{- toYaml (list $env) | nindent 4 }}
    {{- end }}
  {{- end }}

  {{- if $container.envFrom }}
  envFrom:
    {{- range $envFrom := $container.envFrom -}}
      {{/*- $envFrom := deepCopy $envFrom */}}
      {{- if kindIs "map" ($envFrom.configMapRef).name }}
        {{- $_ := set $envFrom.configMapRef "name" (include "generic.fullResourceName" (dict
          "helm" $.helm
          "generic" (dict
            "componentName" (default $.generic.componentName $envFrom.configMapRef.name.componentName)
            "resourceName"  (default $.generic.resourceName $envFrom.configMapRef.name.resourceName)
          )
        )) }}
      {{- end }}
      {{- if kindIs "map" ($envFrom.secretRef).name }}
        {{- $_ := set $envFrom.secretRef "name" (include "generic.fullResourceName" (dict
          "helm" $.helm
          "generic" (dict
            "componentName" (default $.generic.componentName $envFrom.secretRef.name.componentName)
            "resourceName"  (default $.generic.resourceName $envFrom.secretRef.name.resourceName)
          )
        )) }}
      {{- end }}
      {{- toYaml (list $envFrom) | nindent 4 }}
    {{- end }}
  {{- end }}

  {{- with $container.rawSpec }}{{ toYaml . | nindent 2 }}{{ end }}

{{- end }}
